# llm_connector.py
import logging
from langchain_groq import ChatGroq

logger = logging.getLogger(__name__)

class LLMConnector:
    def __init__(self, groq_api_key: str, model_name: str):
        self.groq_api_key = groq_api_key
        self.model_name = model_name
        self.llm = None

    def connect(self):
        """K·∫øt n·ªëi v√† kh·ªüi t·∫°o LLM th√¥ng qua Groq API"""
        try:
            logger.info(f"üîÑ ƒêang k·∫øt n·ªëi t·ªõi Large Language Model (LLM): {self.model_name} qua Groq API...")
            self.llm = ChatGroq(
                groq_api_key=self.groq_api_key,
                model_name=self.model_name
            )

            # Th·ª≠ g·ª≠i m·ªôt c√¢u l·ªánh ƒë∆°n gi·∫£n ƒë·ªÉ ki·ªÉm tra k·∫øt n·ªëi
            self.llm.invoke("Xin ch√†o!")

            logger.info(f"‚úÖ K·∫øt n·ªëi t·ªõi LLM '{self.model_name}' th√†nh c√¥ng!")
            return self.llm

        except Exception as e:
            logger.error(f"‚ùå L·ªói nghi√™m tr·ªçng khi k·∫øt n·ªëi t·ªõi LLM: {e}")
            logger.error("H√£y ƒë·∫£m b·∫£o r·∫±ng GROQ_API_KEY l√† ch√≠nh x√°c v√† c√≥ k·∫øt n·ªëi internet.")
            return None